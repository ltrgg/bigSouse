{"remainingRequest":"D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\src\\App3.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\src\\App3.vue","mtime":1595773953000},{"path":"D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665563423068},{"path":"D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\node_modules\\babel-loader\\lib\\index.js","mtime":1665563427105},{"path":"D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665563423068},{"path":"D:\\练习\\大文件上传\\大文件上传和断点续传\\客户端\\node_modules\\vue-loader\\lib\\index.js","mtime":1665563427303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZpbGVQYXJzZSB9IGZyb20gIi4vYXNzZXRzL3V0aWxzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFNwYXJrTUQ1IGZyb20gInNwYXJrLW1kNSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvdGFsOiAwLAogICAgICB2aWRlbzogbnVsbCwKICAgICAgYnRuOiBmYWxzZSwKICAgIH07CiAgfSwKICBmaWx0ZXJzOiB7CiAgICBidG5UZXh0KGJ0bikgewogICAgICByZXR1cm4gYnRuID8gIue7p+e7rSIgOiAi5pqC5YGcIjsKICAgIH0sCiAgICB0b3RhbFRleHQodG90YWwpIHsKICAgICAgcmV0dXJuIHRvdGFsID4gMTAwID8gMTAwIDogdG90YWw7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgY2hhbmdlRmlsZShmaWxlKSB7CiAgICAgIGlmICghZmlsZSkgcmV0dXJuOwogICAgICBmaWxlID0gZmlsZS5yYXc7CgogICAgICAvLyDop6PmnpDkuLpCVUZGRVLmlbDmja4KICAgICAgLy8g5oiR5Lus5Lya5oqK5paH5Lu25YiH54mH5aSE55CG77ya5oqK5LiA5Liq5paH5Lu25YiG5Ymy5oiQ5Li65aW95Yeg5Liq6YOo5YiG77yI5Zu65a6a5pWw6YePL+WbuuWumuWkp+Wwj++8iQogICAgICAvLyDmr4/kuIDkuKrliIfniYfmnInoh6rlt7HnmoTpg6jliIbmlbDmja7lkozoh6rlt7HnmoTlkI3lrZcKICAgICAgLy8gSEFTSF8xLm1wNAogICAgICAvLyBIQVNIXzIubXA0CiAgICAgIC8vIC4uLgogICAgICBsZXQgYnVmZmVyID0gYXdhaXQgZmlsZVBhcnNlKGZpbGUsICJidWZmZXIiKSwKICAgICAgICBzcGFyayA9IG5ldyBTcGFya01ENS5BcnJheUJ1ZmZlcigpLAogICAgICAgIGhhc2gsCiAgICAgICAgc3VmZml4OwogICAgICBzcGFyay5hcHBlbmQoYnVmZmVyKTsKICAgICAgaGFzaCA9IHNwYXJrLmVuZCgpOwogICAgICBzdWZmaXggPSAvXC4oWzAtOWEtekEtWl0rKSQvaS5leGVjKGZpbGUubmFtZSlbMV07CgogICAgICAvLyDliJvlu7oxMDDkuKrliIfniYcKICAgICAgbGV0IHBhcnRMaXN0ID0gW10sCiAgICAgICAgcGFydHNpemUgPSBmaWxlLnNpemUgLyAxMDAsCiAgICAgICAgY3VyID0gMDsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykgewogICAgICAgIGxldCBpdGVtID0gewogICAgICAgICAgY2h1bms6IGZpbGUuc2xpY2UoY3VyLCBjdXIgKyBwYXJ0c2l6ZSksCiAgICAgICAgICBmaWxlbmFtZTogYCR7aGFzaH1fJHtpfS4ke3N1ZmZpeH1gLAogICAgICAgIH07CiAgICAgICAgY3VyICs9IHBhcnRzaXplOwogICAgICAgIHBhcnRMaXN0LnB1c2goaXRlbSk7CiAgICAgIH0KCiAgICAgIHRoaXMucGFydExpc3QgPSBwYXJ0TGlzdDsKICAgICAgdGhpcy5oYXNoID0gaGFzaDsKICAgICAgdGhpcy5zZW5kUmVxdWVzdCgpOwogICAgfSwKICAgIGFzeW5jIHNlbmRSZXF1ZXN0KCkgewogICAgICAvLyDmoLnmja4xMDDkuKrliIfniYfliJvpgKAxMDDkuKror7fmsYLvvIjpm4blkIjvvIkKICAgICAgbGV0IHJlcXVlc3RMaXN0ID0gW107CiAgICAgIHRoaXMucGFydExpc3QuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAvLyDmr4/kuIDkuKrlh73mlbDpg73mmK/lj5HpgIHkuIDkuKrliIfniYfnmoTor7fmsYIKICAgICAgICBsZXQgZm4gPSAoKSA9PiB7CiAgICAgICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY2h1bmsiLCBpdGVtLmNodW5rKTsKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZmlsZW5hbWUiLCBpdGVtLmZpbGVuYW1lKTsKICAgICAgICAgIHJldHVybiBheGlvcwogICAgICAgICAgICAucG9zdCgiL3NpbmdsZTMiLCBmb3JtRGF0YSwgewogICAgICAgICAgICAgIGhlYWRlcnM6IHsgIkNvbnRlbnQtVHlwZSI6ICJtdWx0aXBhcnQvZm9ybS1kYXRhIiB9LAogICAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7CiAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmRhdGE7CiAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09IDApIHsKICAgICAgICAgICAgICAgIHRoaXMudG90YWwgKz0gMTsKICAgICAgICAgICAgICAgIC8vIOS8oOWujOeahOWIh+eJh+aIkeS7rOaKiuWug+enu+mZpOaOiQogICAgICAgICAgICAgICAgdGhpcy5wYXJ0TGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfTsKICAgICAgICByZXF1ZXN0TGlzdC5wdXNoKGZuKTsKICAgICAgfSk7CgogICAgICAvLyDkvKDpgJLvvJrlubbooYwoYWpheC5hYm9ydCgpKS/kuLLooYwo5Z+65LqO5qCH5b+X5o6n5Yi25LiN5Y+R6YCBKQogICAgICBsZXQgaSA9IDA7CiAgICAgIGxldCBjb21wbGV0ZSA9IGFzeW5jICgpID0+IHsKICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXhpb3MuZ2V0KCIvbWVyZ2UiLCB7CiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgaGFzaDogdGhpcy5oYXNoLAogICAgICAgICAgfSwKICAgICAgICB9KTsKICAgICAgICByZXN1bHQgPSByZXN1bHQuZGF0YTsKICAgICAgICBpZiAocmVzdWx0LmNvZGUgPT0gMCkgewogICAgICAgICAgdGhpcy52aWRlbyA9IHJlc3VsdC5wYXRoOwogICAgICAgIH0KICAgICAgfTsKICAgICAgbGV0IHNlbmQgPSBhc3luYyAoKSA9PiB7CiAgICAgICAgLy8g5bey57uP5Lit5pat5YiZ5LiN5YaN5LiK5LygCiAgICAgICAgaWYgKHRoaXMuYWJvcnQpIHJldHVybjsKICAgICAgICBpZiAoaSA+PSByZXF1ZXN0TGlzdC5sZW5ndGgpIHsKICAgICAgICAgIC8vIOmDveS8oOWujOS6hgogICAgICAgICAgY29tcGxldGUoKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgYXdhaXQgcmVxdWVzdExpc3RbaV0oKTsKICAgICAgICBpKys7CiAgICAgICAgc2VuZCgpOwogICAgICB9OwogICAgICBzZW5kKCk7CiAgICB9LAogICAgaGFuZGxlQnRuKCkgewogICAgICBpZiAodGhpcy5idG4pIHsKICAgICAgICAvL+aWreeCuee7reS8oAogICAgICAgIHRoaXMuYWJvcnQgPSBmYWxzZTsKICAgICAgICB0aGlzLmJ0biA9IGZhbHNlOwogICAgICAgIHRoaXMuc2VuZFJlcXVlc3QoKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgLy/mmoLlgZzkuIrkvKAKICAgICAgdGhpcy5idG4gPSB0cnVlOwogICAgICB0aGlzLmFib3J0ID0gdHJ1ZTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["App3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"App3.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <el-upload drag action :auto-upload=\"false\" :show-file-list=\"false\" :on-change=\"changeFile\">\n      <i class=\"el-icon-upload\"></i>\n      <div class=\"el-upload__text\">\n        将文件拖到此处，或\n        <em>点击上传</em>\n      </div>\n    </el-upload>\n\n    <!-- PROGRESS -->\n    <div class=\"progress\">\n      <span>上传进度：{{total|totalText}}%</span>\n      <el-link type=\"primary\" v-if=\"total>0 && total<100\" @click=\"handleBtn\">{{btn|btnText}}</el-link>\n    </div>\n\n    <!-- VIDEO -->\n    <div class=\"uploadImg\" v-if=\"video\">\n      <video :src=\"video\" controls />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fileParse } from \"./assets/utils\";\nimport axios from \"axios\";\nimport SparkMD5 from \"spark-md5\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      total: 0,\n      video: null,\n      btn: false,\n    };\n  },\n  filters: {\n    btnText(btn) {\n      return btn ? \"继续\" : \"暂停\";\n    },\n    totalText(total) {\n      return total > 100 ? 100 : total;\n    },\n  },\n  methods: {\n    async changeFile(file) {\n      if (!file) return;\n      file = file.raw;\n\n      // 解析为BUFFER数据\n      // 我们会把文件切片处理：把一个文件分割成为好几个部分（固定数量/固定大小）\n      // 每一个切片有自己的部分数据和自己的名字\n      // HASH_1.mp4\n      // HASH_2.mp4\n      // ...\n      let buffer = await fileParse(file, \"buffer\"),\n        spark = new SparkMD5.ArrayBuffer(),\n        hash,\n        suffix;\n      spark.append(buffer);\n      hash = spark.end();\n      suffix = /\\.([0-9a-zA-Z]+)$/i.exec(file.name)[1];\n\n      // 创建100个切片\n      let partList = [],\n        partsize = file.size / 100,\n        cur = 0;\n      for (let i = 0; i < 100; i++) {\n        let item = {\n          chunk: file.slice(cur, cur + partsize),\n          filename: `${hash}_${i}.${suffix}`,\n        };\n        cur += partsize;\n        partList.push(item);\n      }\n\n      this.partList = partList;\n      this.hash = hash;\n      this.sendRequest();\n    },\n    async sendRequest() {\n      // 根据100个切片创造100个请求（集合）\n      let requestList = [];\n      this.partList.forEach((item, index) => {\n        // 每一个函数都是发送一个切片的请求\n        let fn = () => {\n          let formData = new FormData();\n          formData.append(\"chunk\", item.chunk);\n          formData.append(\"filename\", item.filename);\n          return axios\n            .post(\"/single3\", formData, {\n              headers: { \"Content-Type\": \"multipart/form-data\" },\n            })\n            .then((result) => {\n              result = result.data;\n              if (result.code == 0) {\n                this.total += 1;\n                // 传完的切片我们把它移除掉\n                this.partList.splice(index, 1);\n              }\n            });\n        };\n        requestList.push(fn);\n      });\n\n      // 传递：并行(ajax.abort())/串行(基于标志控制不发送)\n      let i = 0;\n      let complete = async () => {\n        let result = await axios.get(\"/merge\", {\n          params: {\n            hash: this.hash,\n          },\n        });\n        result = result.data;\n        if (result.code == 0) {\n          this.video = result.path;\n        }\n      };\n      let send = async () => {\n        // 已经中断则不再上传\n        if (this.abort) return;\n        if (i >= requestList.length) {\n          // 都传完了\n          complete();\n          return;\n        }\n        await requestList[i]();\n        i++;\n        send();\n      };\n      send();\n    },\n    handleBtn() {\n      if (this.btn) {\n        //断点续传\n        this.abort = false;\n        this.btn = false;\n        this.sendRequest();\n        return;\n      }\n      //暂停上传\n      this.btn = true;\n      this.abort = true;\n    },\n  },\n};\n</script>"]}]}